import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2;
import { createStyles } from "../theme";
import { getThemeColor } from "./theme/colors";
export var useStyles = createStyles(function (_ref, _ref2) {
  var css = _ref.css,
    cx = _ref.cx,
    token = _ref.token,
    prefixCls = _ref.prefixCls;
  var theme = _ref2.theme,
    type = _ref2.type;
  var prefix = "".concat(prefixCls, "-").concat(token === null || token === void 0 ? void 0 : token.editorPrefix, "-highlight");
  var _getThemeColor = getThemeColor(theme === 'dark'),
    colorFillTertiary = _getThemeColor.colorFillTertiary;
  var typeStylish = css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      background-color: ", ";\n    "])), type === 'block' ? colorFillTertiary : 'transparent');
  return {
    container: cx("".concat(prefix, "-container"), typeStylish, css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n          position: relative;\n          margin: 0;\n          border-radius: ", "px;\n          transition: background-color 100ms ", ";\n\n          :not(:hover) {\n            .", "-copy {\n              visibility: hidden;\n              opacity: 0;\n            }\n\n            .", "-tag {\n              visibility: hidden;\n              opacity: 0;\n            }\n          }\n\n          pre {\n            margin: 0 !important;\n            padding: ", " !important;\n            background: none !important;\n          }\n\n          code {\n            background: transparent !important;\n          }\n        "])), token.borderRadius, token.motionEaseOut, prefix, prefix, type === 'pure' ? 0 : "16px 24px"))
  };
});