import _taggedTemplateLiteral from "@babel/runtime/helpers/esm/taggedTemplateLiteral";
var _templateObject, _templateObject2, _templateObject3, _templateObject4, _templateObject5, _templateObject6, _templateObject7, _templateObject8, _templateObject9, _templateObject10, _templateObject11;
import { createStyles } from "../theme";
export var useStyles = createStyles(function (_ref) {
  var css = _ref.css,
    cx = _ref.cx,
    token = _ref.token,
    prefixCls = _ref.prefixCls;
  var prefix = "".concat(prefixCls, "-").concat(token === null || token === void 0 ? void 0 : token.editorPrefix, "-markdown");
  return {
    container: css(_templateObject || (_templateObject = _taggedTemplateLiteral(["\n      :not(:last-child) {\n        margin-block-start: 1em;\n        margin-block-end: 1em;\n        margin-inline-start: 0;\n        margin-inline-end: 0;\n      }\n    "]))),
    highlight: css(_templateObject2 || (_templateObject2 = _taggedTemplateLiteral(["\n      pre {\n        padding: 12px !important;\n      }\n    "]))),
    markdown: css(_templateObject3 || (_templateObject3 = _taggedTemplateLiteral(["\n      color: ", ";\n\n      h1,\n      h2,\n      h3,\n      h4,\n      h5 {\n        font-weight: 600;\n      }\n\n      p {\n        margin-block-start: 0;\n        margin-block-end: 0;\n\n        font-size: 14px;\n        line-height: 1.8;\n        color: ", ";\n        word-break: break-all;\n        word-wrap: break-word;\n\n        + * {\n          margin-block-end: 0.5em;\n        }\n      }\n\n      > *:last-child {\n        margin-bottom: 0 !important;\n      }\n\n      blockquote {\n        margin: 16px 0;\n        padding: 0 12px;\n\n        p {\n          font-style: italic;\n          color: ", ";\n        }\n      }\n\n      p:not(:last-child) {\n        margin-bottom: 1em;\n      }\n\n      a {\n        color: ", ";\n\n        &:hover {\n          color: ", ";\n        }\n\n        &:active {\n          color: ", ";\n        }\n      }\n\n      img {\n        max-width: 100%;\n      }\n\n      pre,\n      [data-code-type='highlighter'] {\n        border: none;\n        border-radius: ", "px;\n\n        > code {\n          padding: 0 !important;\n          border: none !important;\n        }\n      }\n\n      > :not([data-code-type='highlighter']) code {\n        padding: 2px 6px;\n\n        font-size: ", "px;\n        border-radius: ", "px;\n      }\n\n      table {\n        border-spacing: 0;\n\n        width: 100%;\n        margin-block-start: 1em;\n        margin-block-end: 1em;\n        margin-inline-start: 0;\n        margin-inline-end: 0;\n        padding: 8px;\n\n        border: 1px solid ", ";\n        border-radius: ", "px;\n\n        code {\n          display: inline-flex;\n        }\n      }\n\n      th,\n      td {\n        padding-block-start: 10px;\n        padding-block-end: 10px;\n        padding-inline-start: 16px;\n        padding-inline-end: 16px;\n      }\n\n      thead {\n        tr {\n          th {\n            background: ", ";\n\n            &:first-child {\n              border-top-left-radius: ", "px;\n              border-bottom-left-radius: ", "px;\n            }\n\n            &:last-child {\n              border-top-right-radius: ", "px;\n              border-bottom-right-radius: ", "px;\n            }\n          }\n        }\n      }\n\n      > ol > li::marker {\n        color: ", " !important;\n      }\n\n      > ul > li {\n        line-height: 1.8;\n        list-style-type: disc;\n\n        &::marker {\n          color: ", " !important;\n        }\n      }\n\n      ol,\n      ul {\n        > li::marker {\n          color: ", ";\n        }\n      }\n\n      details {\n        margin-bottom: 1em;\n        padding: 12px 16px;\n\n        background: ", ";\n        border: 1px solid ", ";\n        border-radius: ", "px;\n\n        transition: all 400ms ", ";\n      }\n\n      details[open] {\n        summary {\n          padding-bottom: 12px;\n          border-bottom: 1px solid ", ";\n        }\n      }\n    "])), token.colorText, token.colorText, token.colorTextDescription, token.colorLink, token.colorLinkHover, token.colorLinkActive, token.borderRadius, token.fontSizeSM, token.borderRadiusSM, token.colorBorderSecondary, token.borderRadius, token.colorFillTertiary, token.borderRadius, token.borderRadius, token.borderRadius, token.borderRadius, token.colorPrimary, token.colorPrimary, token.colorTextDescription, token.colorFillTertiary, token.colorBorderSecondary, token.borderRadiusLG, token.motionEaseOut, token.colorBorder),
    wrapper: cx(css(_templateObject4 || (_templateObject4 = _taggedTemplateLiteral(["\n        background-color: ", ";\n        border-radius: ", "px;\n      "])), token.colorFillTertiary, token.borderRadius)),
    highlighter: css(_templateObject5 || (_templateObject5 = _taggedTemplateLiteral(["\n      max-height: 400px;\n      overflow: auto;\n    "]))),
    header: cx("".concat(prefix, "-header"), css(_templateObject6 || (_templateObject6 = _taggedTemplateLiteral(["\n        padding: 4px 8px;\n        width: auto !important; // override self width\n      "]))), css(_templateObject7 || (_templateObject7 = _taggedTemplateLiteral(["\n        .", "-btn {\n          &:hover {\n            color: ", " !important;\n          }\n        }\n      "])), prefix, token.colorTextSecondary)),
    copy: css(_templateObject8 || (_templateObject8 = _taggedTemplateLiteral(["\n      background-color: transparent;\n      position: inherit;\n      width: 30px;\n      padding-left: 6px;\n    "]))),
    select: css(_templateObject9 || (_templateObject9 = _taggedTemplateLiteral(["\n      min-width: 100px;\n      .", "-select-selector {\n        padding-inline-end: 4px !important;\n      }\n      .", "-select-selection-overflow-item-suffix {\n        .", "-select-selection-search {\n          display: none;\n        }\n      }\n    "])), prefixCls, prefixCls, prefixCls),
    trigger: css(_templateObject10 || (_templateObject10 = _taggedTemplateLiteral(["\n      min-width: 100px;\n      display: flex;\n      justify-content: center;\n      span {\n        font-family: ", " !important;\n      }\n    "])), token.fontFamilyCode),
    lang: cx(css(_templateObject11 || (_templateObject11 = _taggedTemplateLiteral(["\n        position: absolute;\n        z-index: 2;\n        right: 0;\n        bottom: 8px;\n\n        font-family: ", ";\n        color: ", ";\n\n        transition: opacity 0.1s;\n      "])), token.fontFamilyCode, token.colorTextSecondary))
  };
});