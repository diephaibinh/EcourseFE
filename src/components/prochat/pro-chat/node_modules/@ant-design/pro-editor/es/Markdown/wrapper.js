import _slicedToArray from "@babel/runtime/helpers/esm/slicedToArray";
import CopyButton from "../components/CopyButton";
import { DownOutlined, RightOutlined } from '@ant-design/icons';
import { ActionIcon, Button, HIGHLIGHT_LANGUAGES, Highlight, Select } from "./..";
import classNames from 'classnames';
import { memo, useMemo, useState } from 'react';
import { Flexbox } from 'react-layout-kit';
import { useStyles } from "./style";
import { jsx as _jsx } from "react/jsx-runtime";
import { jsxs as _jsxs } from "react/jsx-runtime";
var options = HIGHLIGHT_LANGUAGES.map(function (key) {
  return {
    label: key,
    value: key.toLowerCase()
  };
});
var HighlightWrapper = /*#__PURE__*/memo(function (props) {
  var _ref = props || {},
    children = _ref.children,
    _ref$language = _ref.language,
    language = _ref$language === void 0 ? 'markdown' : _ref$language,
    className = _ref.className,
    style = _ref.style;
  var _useState = useState(true),
    _useState2 = _slicedToArray(_useState, 2),
    expand = _useState2[0],
    setExpand = _useState2[1];
  var _useState3 = useState(language),
    _useState4 = _slicedToArray(_useState3, 2),
    lang = _useState4[0],
    setLang = _useState4[1];
  var _useStyles = useStyles(),
    styles = _useStyles.styles;
  var highlightBlock = useMemo(function () {
    return /*#__PURE__*/_jsx(Highlight, {
      language: lang === null || lang === void 0 ? void 0 : lang.toLowerCase(),
      copyable: false,
      showLanguage: false,
      type: "block",
      children: children
    });
  }, [lang, children]);
  return /*#__PURE__*/_jsxs("div", {
    className: classNames(styles.wrapper, className),
    style: style,
    children: [/*#__PURE__*/_jsxs(Flexbox, {
      align: 'center',
      className: styles.header,
      horizontal: true,
      justify: 'space-between',
      children: [/*#__PURE__*/_jsx(ActionIcon, {
        icon: expand ? /*#__PURE__*/_jsx(DownOutlined, {
          size: 14
        }) : /*#__PURE__*/_jsx(RightOutlined, {
          size: 14
        }),
        onClick: function onClick() {
          return setExpand(!expand);
        },
        size: 24
      }), /*#__PURE__*/_jsx(Select, {
        bordered: false,
        className: styles.select,
        onSelect: setLang,
        mode: "tags",
        options: options,
        tagRender: function tagRender(props) {
          return /*#__PURE__*/_jsx("div", {
            className: styles.trigger,
            children: /*#__PURE__*/_jsx(Button, {
              type: 'text',
              size: 'small',
              children: props.label
            })
          });
        },
        showSearch: true,
        size: 'small',
        suffixIcon: false,
        value: [lang.toLowerCase()]
      }), /*#__PURE__*/_jsx(CopyButton, {
        className: styles.copy,
        content: children
      })]
    }), /*#__PURE__*/_jsx("div", {
      className: styles.highlighter,
      children: expand ? highlightBlock : null
    })]
  });
});
export default HighlightWrapper;